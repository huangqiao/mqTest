<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:jms="http://www.springframework.org/schema/jms" xmlns:amq="http://activemq.apache.org/schema/core"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans    
        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/context 
     	http://www.springframework.org/schema/context/spring-context-4.0.xsd
     	http://www.springframework.org/schema/util
     	http://www.springframework.org/schema/util/spring-util-4.0.xsd
        http://www.springframework.org/schema/aop
	 	http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
	 	http://www.springframework.org/schema/tx
	 	http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
	 	http://www.springframework.org/schema/jms 
	 	http://www.springframework.org/schema/jms/spring-jms-4.0.xsd">

	<!-- 配置ConnectionFactory -->
	<!-- 真正可以产生Connection的ConnectionFactory，由对应的 JMS服务厂商提供 -->
	<bean id="targetConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
		<property name="brokerURL" value="tcp://192.168.220.130:61616" />
		<property name="userName" value="admin" />
		<property name="password" value="admin" />
	</bean>

	<!-- 连接池配置 -->
	<!-- ActiveMQ为我们提供了一个PooledConnectionFactory，通过往里面注入一个ActiveMQConnectionFactory 
		可以用来将Connection、Session和MessageProducer池化，这样可以大大的减少我们的资源消耗。 
		要依赖于 activemq-pool包， 区别CachingConnectionFactory类,
		destroy-method="stop" 当jms不用时回收连接-->
	<bean id="connectionFactory" class="org.apache.activemq.pool.PooledConnectionFactory"
		destroy-method="stop">
		<property name="connectionFactory" ref="targetConnectionFactory"/>
	</bean>

	<bean id="jmsFactory"
		class="org.springframework.jms.connection.SingleConnectionFactory">
		<property name="targetConnectionFactory" ref="connectionFactory" />
	</bean>

	<!-- Spring JMS Template -->
	<bean id="queuejmsTemplate" class="org.springframework.jms.core.JmsTemplate">
		<property name="connectionFactory" ref="jmsFactory" />
		<!-- deliveryMode, priority, timeToLive 的开关，要生效，必须配置为true，默认false -->
		<property name="explicitQosEnabled" value="true" />
		<!-- 发送模式 DeliveryMode.NON_PERSISTENT=1:非持久 ; DeliveryMode.PERSISTENT=2:持久 -->
		<property name="deliveryMode" value="2" />
		<!-- 目标 -->
		<property name="defaultDestination" ref="queuedestination" /> 
		<!-- pub/sub模型（发布/订阅） -->
		<property name="pubSubDomain" value="false" />
		
		<property name="sessionAcknowledgeMode" value="1" />    
	</bean>

	<!-- 定义JmsTemplate的Topic类型 -->
	<bean id="jmsTopicTemplate" class="org.springframework.jms.core.JmsTemplate">
		<!-- 这个connectionFactory对应的是我们定义的Spring提供的那个ConnectionFactory对象 -->
		<property name="connectionFactory" ref="jmsFactory" />
		<!-- pub/sub模型（发布/订阅） -->
		<property name="pubSubDomain" value="true" />
		<!-- 目标 -->
		<property name="defaultDestination" ref="topdestination" /> 
	</bean>


	<!-- 发送消息的目的地（一个队列） -->
	<bean id="topdestination" class="org.apache.activemq.command.ActiveMQTopic">
		<!-- 设置消息队列的名字 -->
		<constructor-arg index="0" value="subject" />
	</bean>

	<bean id="queuedestination" class="org.apache.activemq.command.ActiveMQQueue">
		<!-- 设置消息队列的名字 -->
		<constructor-arg index="0" value="mytest" />
	</bean>

	<!-- 加入事物控制 -->
<!-- 	<bean id="jmsContainer"
		class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="connectionFactory" ref="jmsFactory" />
		<property name="destination" ref="queuedestination" />
		<property name="messageListener" ref="consumerMessageListener" />
		<property name="sessionTransacted" value="true" />
	</bean> -->
	
	<bean id="jmsTransactionManager" class="org.springframework.jms.connection.JmsTransactionManager"> 
		<property name = "connectionFactory" ref="connectionFactory"/>
	</bean>
	
	<tx:annotation-driven transaction-manager="jmsTransactionManager" />
	<!-- 事物控制结束 -->
</beans>